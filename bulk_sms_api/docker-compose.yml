version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_server
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DEBUG=True
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=new_mass_mailing_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=user01
    depends_on:
      - db
    restart: always

  dash:
    build:
      context: .
      dockerfile: Dockerfile.dash
    container_name: dash_server
    ports:
      - "8050:8050"
    volumes:
      - .:/app
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=new_mass_mailing_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=user01
    depends_on:
      - db
    restart: always

  db:
    image: postgres:15
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: user01
      POSTGRES_DB: new_mass_mailing_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_server
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana_server
    ports:
      - "3100:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

  promlens:
    image: prom/promlens:latest
    container_name: promlens_server
    ports:
      - "8080:8080"
    restart: always

volumes:
  postgres_data:
  grafana_data: